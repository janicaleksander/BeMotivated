<head><script src=\"https://cdn.jsdelivr.net/npm/apexcharts\"></script><style>\r\n        @import url(https://fonts.googleapis.com/css?family=Poppins:100,100italic,200,200italic,300,300italic,regular,italic,500,500italic,600,600italic,700,700italic,800,800italic,900,900italic);\r\n        :root {\r\n            --primary-color: #ff0000;\r\n            --text-color: #1d1d1d;\r\n            --bg-color:#ffffff;\r\n        }\r\n        * {\r\n            margin: 0;\r\n            padding: 0;\r\n            box-sizing: border-box;\r\n\r\n        }\r\n        body {\r\n            background: #ffffff;\r\n        }\r\n        .container {\r\n            width: 100%;\r\n            min-height: 100vh;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            margin: -100px auto;\r\n\r\n\r\n        }\r\n        .calendar {\r\n            width: 100%;\r\n            max-width: 500px;\r\n            background: var(--bg-color);\r\n            padding: 30px 20px;\r\n            border-radius: 10px;\r\n\r\n        }\r\n        .calendar .header {\r\n            display: flex;\r\n            justify-content: space-between;\r\n            align-items: center;\r\n            margin-bottom: 20px;\r\n            padding-bottom: 20px;\r\n            border-bottom: 2px solid #ccc;\r\n        }\r\n        .calendar .header .month {\r\n            display: flex;\r\n            align-items: center;\r\n            font-size: 25px;\r\n            font-weight: 600;\r\n            color: var(--text-color);\r\n        }\r\n        .calendar .header .btns {\r\n            display: flex;\r\n            gap: 10px;\r\n        }\r\n        .calendar .header .btns .btn {\r\n            width: 50px;\r\n            height: 40px;\r\n            background: var(--primary-color);\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            border-radius: 5px;\r\n            color: #fff;\r\n            font-size: 16px;\r\n            cursor: pointer;\r\n            transition: all 0.3s;\r\n        }\r\n        .calendar .header .btns .btn:hover {\r\n            background: #db0933;\r\n            transform: scale(1.05);\r\n        }\r\n        .calendar .weekdays {\r\n            display: flex;\r\n            gap: 10px;\r\n            margin-bottom: 10px;\r\n        }\r\n        .calendar .weekdays .day {\r\n            width: calc(100% / 7 - 10px);\r\n            text-align: center;\r\n            font-size: 16px;\r\n            font-weight: 600;\r\n        }\r\n        .calendar .days {\r\n            display: flex;\r\n            flex-wrap: wrap;\r\n            gap: 10px;\r\n        }\r\n        .calendar .days .day {\r\n            width: calc(100% / 7 - 10px);\r\n            height: 50px;\r\n            background: #fff;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            border-radius: 5px;\r\n            font-size: 16px;\r\n            font-weight: 400;\r\n            color: var(--text-color);\r\n            transition: all 0.3s;\r\n            user-select: none;\r\n        }\r\n        .calendar .days .day:not(.next):not(.prev):hover {\r\n            color: #fff;\r\n            background: var(--primary-color);\r\n            transform: scale(1.05);\r\n        }\r\n        .calendar .days .day.next,\r\n        .calendar .days .day.prev {\r\n            color: #ccc;\r\n        }\r\n        .calendar .days .day.today {\r\n            color: #fff;\r\n            background: var(--primary-color);\r\n        }\r\n        .credits a {\r\n            position: absolute;\r\n            bottom: 10px;\r\n            left: 50%;\r\n            transform: translateX(-50%);\r\n            font-size: 14px;\r\n            color: #aaa;\r\n        }\r\n        .credits span {\r\n            color: var(--primary-color);\r\n        }\r\n\r\n    </style></head><body><div class=\"container\"><div class=\"calendar\"><div class=\"header\"><div class=\"month\"></div><div class=\"btns\"><!-- today --><div class=\"btn today\"><span class=\"material-symbols-outlined\">today</span></div><!-- previous month --><div class=\"btn prev\"><span class=\"material-symbols-outlined\">chevron_left</span></div><!-- next month --><div class=\"btn next\"><span class=\"material-symbols-outlined\">chevron_right</span></div></div></div><div class=\"weekdays\"><div class=\"day\">Mon</div><div class=\"day\">Tue</div><div class=\"day\">Wed</div><div class=\"day\">Thu</div><div class=\"day\">Fri</div><div class=\"day\">Sat</div><div class=\"day\">Sun</div></div><div class=\"days\"><!-- render days with js --></div><br><div id=\"calendar-task\"></div><div id=\"chart\"><form></form></div><div id=\"ctn\"></div></div></div><script>\r\n\r\n\r\n    function getDayOfWeekIndex(date, month, year) {\r\n        const dateObj = new Date(year, month - 1, date);\r\n        const dayNumber = dateObj.getDay();\r\n        return dayNumber;\r\n    }\r\n\r\n    const daysContainer = document.querySelector(\".days\");\r\n    const nextBtn = document.querySelector(\".next\");\r\n    const prevBtn = document.querySelector(\".prev\");\r\n    const todayBtn = document.querySelector(\".today\");\r\n    const month = document.querySelector(\".month\");\r\n\r\n    const months = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\",\r\n    ];\r\n\r\n    const days = [ \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\",\"Sun\"];\r\n\r\n    const date = new Date();\r\n    let currentMonth = date.getMonth();\r\n    let currentYear = date.getFullYear();\r\n\r\n    const renderCalendar = () => {\r\n        date.setDate(1);\r\n        const firstDay = new Date(currentYear, currentMonth, 1); // data pierwszego dnia miesciaca\r\n        const lastDay = new Date(currentYear, currentMonth + 1, 0); // data ostatniego dnia miesciaca\r\n\r\n\r\n        const lastDayIndex = lastDay.getDay(); // indeks ostatenigo dnia tygodnie od 0 do 6 0 to niedziela 6 to sobota\r\n        const lastDayDate = lastDay.getDate(); // cyferka ostatniego dnia tygodznia\r\n\r\n\r\n        const prevLastDay = new Date(currentYear, currentMonth, 0); // data ostatniego dnia last miesiaca\r\n        const prevLastDayDate = prevLastDay.getDate(); // cyferka ostatniego dnia last miesiaca\r\n        var nextDays =0;\r\n        if(lastDayIndex===0){\r\n            const nextDays = 0;\r\n        }else{\r\n            nextDays = 7 - lastDayIndex -1;\r\n        }\r\n\r\n        month.innerHTML = `${months[currentMonth]} ${currentYear}`;\r\n\r\n        let days = \"\";\r\n        // firstDay.getDay zwraca indeks pierwszego dnia 0 niedziela 6 sobota\r\n        let k=0;\r\n        if(firstDay.getDay()!==0) {\r\n            for (let x = firstDay.getDay() - 1 ; x > 0; x--) {\r\n                days += `<button class=\"day prev\">${prevLastDayDate - x+1}</button>`;\r\n                k++;\r\n\r\n            }\r\n        }\r\n        k = 6;\r\n        if(firstDay.getDay()===0) {\r\n            for (let x = 6 ; x > 0; x--) {\r\n                days += `<button class=\"day prev\">${prevLastDayDate - k+1}</button>`;\r\n                k--;\r\n            }\r\n        }\r\n\r\n        for (let i = 1; i <= lastDayDate; i++) {\r\n            if (\r\n                i === new Date().getDate() &&\r\n                currentMonth === new Date().getMonth() &&\r\n                currentYear === new Date().getFullYear()\r\n            ) {\r\n                days += `<button  hx-post=\"/api/get-task\" hx-target=\"#calendar-task\" hx-swap=\"innerHTML\"  class=\"day today\" name=\"show\" value=\"${currentYear},${currentMonth+1},${i}\">${i}</button>`;\r\n\r\n            } else {\r\n                days += `<button hx-post=\"/api/get-task\" hx-target=\"#calendar-task\" hx-swap=\"innerHTML\"  class=\"day \" name=\"show\" value=\"${currentYear},${currentMonth+1},${i}\">${i}</button>`;\r\n            }\r\n        }\r\n\r\n        for (let j = 1; j <= nextDays+1; j++) {\r\n            days += `<button  hx-post=\"/api/get-task\" hx-target=\"#calendar-task\" hx-swap=\"innerHTML\"  class=\"day\" name=\"show\" value=\"${currentYear},${currentMonth+1},${j}\">${j}</button>`;\r\n\r\n        }\r\n\r\n        daysContainer.innerHTML = days;\r\n        hideTodayBtn();\r\n    };\r\n\r\n    nextBtn.addEventListener(\"click\", () => {\r\n        currentMonth++;\r\n        if (currentMonth > 11) {\r\n            currentMonth = 0;\r\n            currentYear++;\r\n        }\r\n        renderCalendar();\r\n    });\r\n\r\n    prevBtn.addEventListener(\"click\", () => {\r\n        currentMonth--;\r\n        if (currentMonth < 0) {\r\n            currentMonth = 11;\r\n            currentYear--;\r\n        }\r\n        renderCalendar();\r\n    });\r\n\r\n    todayBtn.addEventListener(\"click\", () => {\r\n        currentMonth = date.getMonth();\r\n        currentYear = date.getFullYear();\r\n        renderCalendar();\r\n    });\r\n\r\n    function hideTodayBtn() {\r\n        if (\r\n            currentMonth === new Date().getMonth() &&\r\n            currentYear === new Date().getFullYear()\r\n        ) {\r\n            todayBtn.style.display = \"none\";\r\n        } else {\r\n            todayBtn.style.display = \"flex\";\r\n        }\r\n    }\r\n\r\n    renderCalendar();\r\n\r\n    function handleClick(event){\r\n        alert(event + ' clicked');\r\n    }\r\n\r\n\r\n</script></body>
<div><form class=\"bg-red-200\">
<p>
</p>
</form></div>
<head><style>\r\n #c-box {\r\n            display: flex;\r\n            justify-content: space-between;\r\n        }\r\n #c-1, #c-2 {\r\n                    flex: 1;\r\n                    margin-right: 10px;\r\n                    padding: 10px;\r\n                    border: 1px solid #ccc;\r\n                    box-sizing: border-box;\r\n  }\r\n</style></head><div id=\"c-box\">
</div>
<div id=\"c-1\"><div class=\"py-6\" id=\"pie-chart\"></div><script>\r\n        var liczba1 = 0;\r\n        var liczba2 = 0;\r\n        var liczba3 = 0;\r\n\r\n        const updateChart = () => {\r\n            let url = \"/api/test/chart-1\";\r\n            fetch(url)\r\n                .then((res) => res.text())\r\n                .then((response) => {\r\n                    console.log(\"Odpowiedź z API:\", response);\r\n\r\n                    response = response.replace(\"[\", \"\").replace(\"]\", \"\");\r\n                    let stringArray = response.split(',');\r\n                    let numberArray = stringArray.map(Number);\r\n                    console.log(\"Tablica liczb:\", numberArray);\r\n\r\n                    liczba1 = numberArray[0];\r\n                    liczba2 = numberArray[1];\r\n                    liczba3 = numberArray[2];\r\n\r\n                    console.log(\"liczba1:\", liczba1);\r\n                    console.log(\"liczba2:\", liczba2);\r\n                    console.log(\"liczba3:\", liczba3);\r\n\r\n                    renderChart();\r\n                })\r\n                .catch((error) => alert(\"Error: \" + error));\r\n        };\r\n\r\n        const renderChart = () => {\r\n            const chartOptions = getChartOptions();\r\n            const chart = new ApexCharts(document.getElementById(\"pie-chart\"), chartOptions);\r\n            chart.render();\r\n        };\r\n\r\n        const getChartOptions = () => {\r\n            return {\r\n                series: [liczba1, liczba2, liczba3],\r\n                colors: [\"#1C64F2\", \"#16BDCA\", \"#9061F9\"],\r\n                chart: {\r\n                    height: 420,\r\n                    width: \"100%\",\r\n                    type: \"pie\",\r\n                },\r\n                stroke: {\r\n                    colors: [\"white\"],\r\n                    lineCap: \"\",\r\n                },\r\n                plotOptions: {\r\n                    pie: {\r\n                        labels: {\r\n                            show: true,\r\n                        },\r\n                        size: \"100%\",\r\n                        dataLabels: {\r\n                            offset: -25\r\n                        }\r\n                    },\r\n                },\r\n                labels: [\"Direct\", \"Organic search\", \"Referrals\"],\r\n                dataLabels: {\r\n                    enabled: true,\r\n                    style: {\r\n                        fontFamily: \"Inter, sans-serif\",\r\n                    },\r\n                },\r\n                legend: {\r\n                    position: \"bottom\",\r\n                    fontFamily: \"Inter, sans-serif\",\r\n                },\r\n                yaxis: {\r\n                    labels: {\r\n                        formatter: function (value) {\r\n                            return value + \"%\"\r\n                        },\r\n                    },\r\n                },\r\n                xaxis: {\r\n                    labels: {\r\n                        formatter: function (value) {\r\n                            return value + \"%\"\r\n                        },\r\n                    },\r\n                    axisTicks: {\r\n                        show: false,\r\n                    },\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                },\r\n            };\r\n        };\r\n\r\n\r\n        updateChart();\r\n    </script></div>
<div id=\"c-2\"><div class=\"py-6\" id=\"pie-chart2\"></div><script>\r\n        var liczba1 = 0;\r\n        var liczba2 = 0;\r\n        var liczba3 = 0;\r\n\r\n        const updateChart2 = () => {\r\n            let url = \"/api/test/chart-1\";\r\n            fetch(url)\r\n                .then((res) => res.text())\r\n                .then((response) => {\r\n                    console.log(\"Odpowiedź z API:\", response);\r\n\r\n                    response = response.replace(\"[\", \"\").replace(\"]\", \"\");\r\n                    let stringArray = response.split(',');\r\n                    let numberArray = stringArray.map(Number);\r\n                    console.log(\"Tablica liczb:\", numberArray);\r\n\r\n                    liczba1 = numberArray[0];\r\n                    liczba2 = numberArray[1];\r\n                    liczba3 = numberArray[2];\r\n\r\n                    console.log(\"liczba1:\", liczba1);\r\n                    console.log(\"liczba2:\", liczba2);\r\n                    console.log(\"liczba3:\", liczba3);\r\n\r\n                    renderChart2();\r\n                })\r\n                .catch((error) => alert(\"Error: \" + error));\r\n        };\r\n\r\n        const renderChart2 = () => {\r\n            const chartOptions = getChartOptions();\r\n            const chart = new ApexCharts(document.getElementById(\"pie-chart2\"), chartOptions);\r\n            chart.render();\r\n        };\r\n\r\n        const getChartOptions2 = () => {\r\n            return {\r\n                series: [liczba1, liczba2, liczba3],\r\n                colors: [\"#1C64F2\", \"#16BDCA\", \"#9061F9\"],\r\n                chart: {\r\n                    height: 420,\r\n                    width: \"100%\",\r\n                    type: \"pie\",\r\n                },\r\n                stroke: {\r\n                    colors: [\"white\"],\r\n                    lineCap: \"\",\r\n                },\r\n                plotOptions: {\r\n                    pie: {\r\n                        labels: {\r\n                            show: true,\r\n                        },\r\n                        size: \"100%\",\r\n                        dataLabels: {\r\n                            offset: -25\r\n                        }\r\n                    },\r\n                },\r\n                labels: [\"Direct\", \"Organic search\", \"Referrals\"],\r\n                dataLabels: {\r\n                    enabled: true,\r\n                    style: {\r\n                        fontFamily: \"Inter, sans-serif\",\r\n                    },\r\n                },\r\n                legend: {\r\n                    position: \"bottom\",\r\n                    fontFamily: \"Inter, sans-serif\",\r\n                },\r\n                yaxis: {\r\n                    labels: {\r\n                        formatter: function (value) {\r\n                            return value + \"%\"\r\n                        },\r\n                    },\r\n                },\r\n                xaxis: {\r\n                    labels: {\r\n                        formatter: function (value) {\r\n                            return value + \"%\"\r\n                        },\r\n                    },\r\n                    axisTicks: {\r\n                        show: false,\r\n                    },\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                },\r\n            };\r\n        };\r\n\r\n\r\n        updateChart2();\r\n    </script></div>
